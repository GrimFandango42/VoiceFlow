[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "voiceflow"
version = "2.0.0"
description = "AI Voice Transcription System with Real-time Processing"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "VoiceFlow Team", email = "support@voiceflow.dev"},
]
keywords = [
    "voice", "transcription", "speech-to-text", "ai", "whisper",
    "real-time", "audio", "productivity"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Office/Business",
    "Topic :: Software Development :: User Interfaces",
]
requires-python = ">=3.9"
dependencies = [
    "faster-whisper>=1.0.0",
    "sounddevice>=0.4.0",
    "numpy>=1.21.0",
    "pyaudio>=0.2.11",
    "keyboard>=0.13.5",
    "pystray>=0.19.0",
    "Pillow>=9.0.0",
    "pyperclip>=1.8.0",
    "ctranslate2>=4.0.0",
    "torch>=2.0.0",
    "pydub>=0.25.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "factory-boy>=3.2.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
    "mkdocs-gen-files>=0.5.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/voiceflow"
Repository = "https://github.com/yourusername/voiceflow.git"
Documentation = "https://voiceflow.readthedocs.io"
Issues = "https://github.com/yourusername/voiceflow/issues"
Changelog = "https://github.com/yourusername/voiceflow/blob/main/CHANGELOG.md"

[project.scripts]
voiceflow = "voiceflow.ui.cli:main"
voiceflow-tray = "voiceflow.ui.tray:main"
voiceflow-setup = "voiceflow.utils.setup:main"

[tool.hatch.build.targets.wheel]
packages = ["src/voiceflow"]

[tool.hatch.build]
directory = "src"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
]

# Ruff configuration
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "D",  # pydocstyle
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]
"scripts/*" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sounddevice.*",
    "pystray.*",
    "keyboard.*",
    "faster_whisper.*",
    "pyaudio.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/voiceflow",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]